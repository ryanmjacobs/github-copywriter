#!/usr/bin/env ruby
################################################################################
# github-copywriter
#
# Author: Ryan Jacobs <ryan.mjacobs@gmail.com>
################################################################################

require "optparse"
require "highline/import"
require "github-copywriter"

# To store command-line options/parameters
options = {}

# Grab command-line options/parameters
ARGV << "-h" if ARGV.empty?
OptionParser.new do |opts|
    executable_name = File.split($0)[1]
    opts.banner = <<-EOS
Updates your copyrights... so you don't have to!

Usage: #{executable_name} [repos...]
       #{executable_name} --all

    EOS

    opts.on("-a", "--all", "Update ALL repositories.") do
        options[:all_repos] = true
    end

    opts.on("-y", "--year YEAR", "Update copyrights to a given year.") do |year|
        year = year.to_i

        if year >= 1000 && year <= 9999 then
            options[:year] = year
        else
            puts "error: year must be four digits".red
            exit
        end
    end

    opts.on("-s", "--skip-forks", "Don't update forked repos.") do
        options[:skip_forks] = true
    end

    opts.on("-n", "--dry-run", "Don't actually write to any repos.") do
        options[:dry_run] = true
    end

    opts.on("-b", "--branches branch1,branch2", "Update specific branches only.") do |comma_separated_branches|
        options[:branches] = comma_separated_branches.split(",").map(&:strip)
    end

    opts.on_tail("-h","--help", "Show this message.") do
        puts opts
        puts ""
        exit
    end

    opts.on_tail("-v", "--version", "Print the version.") do
        puts "github-copywriter v#{Copywriter::VERSION}"
        exit
    end
end.parse!

# Must have at least one repo!
if ARGV.empty? and not options[:all_repos]
    puts "error: No repositories supplied!".red
    exit
end

# Pass input repos into options
options[:repos] = ARGV

# Get username and password
puts "Obtaining OAuth2 access_token from github."
username = ask("GitHub username: ") { |q| q.echo = true }
password = ask("GitHub password: ") { |q| q.echo = false }

# Auth to GitHub
cw = Copywriter.new(username, password)

# Do it!
cw.run!(options)
